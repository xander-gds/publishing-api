{
  "ignored_warnings": [
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "228eabfb5e7fd4115ba3ec7ad08b97525a880cac3150a66e0436cfb144e58e75",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/presenters/queries/content_item_presenter.rb",
      "line": 195,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "scope.joins(\"LEFT JOIN LATERAL #{sql} ON TRUE\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Queries::ContentItemPresenter",
        "method": "join_lateral_aggregates"
      },
      "user_input": "sql",
      "confidence": "Weak",
      "note": "The included SQL is a constant string with no user input."
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "aa4693dfbbb078c1965acd10fd0fdc3f83dc202e78e7a263c348492816e955db",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/queries/links_query.rb",
      "line": 210,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"\\n      EXISTS(\\n        SELECT nested_links.id\\n        FROM links AS nested_links\\n        INNER JOIN link_sets AS nested_link_sets\\n        ON nested_link_sets.id = nested_links.link_set_id\\n        WHERE #{where}\\n        LIMIT 1\\n      )\\n    \")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "LinksQuery",
        "method": "children_field"
      },
      "user_input": "where",
      "confidence": "Medium",
      "note": "This SQL is generated using valid content IDs and configuration data, not with arbitrary user input"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "1e6f84812e202c64e8332efa6bd2367ffffca3e2405c9420e2b32e746d2be6dd",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/presenters/queries/content_item_presenter.rb",
      "line": 109,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"CASE state #{{ :draft => 0, :published => 1, :unpublished => 1, :superseded => 2 }.slice(*states).map do\n \"WHEN '#{k}' THEN #{v} \"\n end.join} END\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Queries::ContentItemPresenter",
        "method": "state_order_clause"
      },
      "user_input": "{ :draft => 0, :published => 1, :unpublished => 1, :superseded => 2 }.slice(*states).map do\n \"WHEN '#{k}' THEN #{v} \"\n end.join",
      "confidence": "Medium",
      "note": "The included SQL are constant strings and integers with no user input."
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "d524ac3f390be989842cb74399c6d10c3757c1b8385fc3b0762e10095200ef24",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/queries/get_edition_ids_with_fallbacks_query.rb",
      "line": 42,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(((\"CASE \\\"#{table}\\\".\\\"#{attribute}\\\" \" << values.map.with_index do\n \"WHEN '#{v}' THEN #{i}\"\n end.join(\" \")) << \" ELSE #{values.size} END\"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GetEditionIdsWithFallbacksQuery",
        "method": "s(:self).order_by_clause"
      },
      "user_input": "values.size",
      "confidence": "Medium",
      "note": "The SQL is generated only with valid locales and edition states, not with arbitrary user input"
    }
  ],
  "updated": "2022-03-15 10:58:37 +0000",
  "brakeman_version": "5.2.1"
}
